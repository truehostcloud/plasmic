name: CI/CD

on:
  push:
    branches:
      - master

env:
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  SERVER_DOCKER_REPO_NAME: plasmic
  CLIENT_DOCKER_REPO_NAME: plasmic-client
  CANVAS_PACKAGES_DOCKER_REPO_NAME: plasmic-canvas-packages
  CLIENT_IMAGE_TAG: latest
  SERVER_IMAGE_TAG: latest
  CANVAS_PACKAGES_IMAGE_TAG: latest
  REACT_APP_DEFAULT_HOST_URL: ${{ secrets.REACT_APP_DEFAULT_HOST_URL }}
  REACT_APP_PUBLIC_URL: ${{ secrets.REACT_APP_PUBLIC_URL }}
  ADMIN_TEAM_DOMAIN: ${{ secrets.ADMIN_TEAM_DOMAIN }}

jobs:
  build-client:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-client
      cancel-in-progress: true
    steps:
      - name: Init
        run: |
          echo "$GITHUB_WORKSPACE"
          df -h
      - name: "Remove swap"
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          df -h
      - name: "Remove boost & tools"
        run: |
          sudo rm -rf "/usr/local/share/boost"
          df -h
      - name: "Remove dotnet"
        run: |
          sudo rm -rf /usr/share/dotnet/shared/
          sudo rm -rf /usr/share/dotnet/host/
          sudo rm -rf /usr/share/dotnet/sdk/
          df -h
      - name: "Remove android"
        run: |
          sudo rm -rf "$ANDROID_SDK_ROOT"
          sudo rm -rf /usr/local/lib/android
          df -h
      - name: "Remove swift"
        run: |
          sudo rm -rf "$SWIFT_PATH"
          sudo rm -rf /usr/share/swift
          df -h
      - name: "Remove docker images"
        run: |
          docker rmi $(docker image ls -aq)
          df -h

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Generate Image Tag
        run: |
          echo "CLIENT_IMAGE_TAG=$(uuidgen | cut -c1-6)-${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Get commit hash
        run: echo "COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Build and Push Client Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: platform/wab/client.Dockerfile
          push: true
          tags: docker.io/${{ env.DOCKER_USERNAME }}/${{ env.CLIENT_DOCKER_REPO_NAME }}:${{ env.CLIENT_IMAGE_TAG }}
          build-args: |
            COMMIT_HASH=${{ env.COMMIT_HASH }}
            REACT_APP_DEFAULT_HOST_URL=${{ env.REACT_APP_DEFAULT_HOST_URL }}
            REACT_APP_PUBLIC_URL=${{ env.REACT_APP_PUBLIC_URL }}
            ADMIN_TEAM_DOMAIN=${{ env.ADMIN_TEAM_DOMAIN }}

  build-canvas-packages:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-canvas-packages
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Generate Image Tag
        run: |
          echo "CANVAS_PACKAGES_IMAGE_TAG=$(git rev-parse --short HEAD)-${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Build and Push Canvas Packages Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: platform/wab/canvas-packages.Dockerfile
          push: true
          tags: docker.io/${{ env.DOCKER_USERNAME }}/${{ env.CANVAS_PACKAGES_DOCKER_REPO_NAME }}:${{ env.CANVAS_PACKAGES_IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-server:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [build-canvas-packages]
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-server
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Generate Image Tag
        run: |
          echo "SERVER_IMAGE_TAG=$(uuidgen | cut -c1-6)-${{ github.ref_name }}" >> $GITHUB_ENV
          echo "CANVAS_PACKAGES_IMAGE_TAG=$(git rev-parse --short HEAD)-${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Build and Push Server Docker image
        uses: docker/build-push-action@v6
        with:
          context: platform/wab
          push: true
          tags: docker.io/${{ env.DOCKER_USERNAME }}/${{ env.SERVER_DOCKER_REPO_NAME }}:${{ env.SERVER_IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            REACT_APP_DEFAULT_HOST_URL=${{ env.REACT_APP_DEFAULT_HOST_URL }}
            CANVAS_PACKAGES_IMAGE_REF=${{ env.DOCKER_USERNAME }}/${{ env.CANVAS_PACKAGES_DOCKER_REPO_NAME }}:${{ env.CANVAS_PACKAGES_IMAGE_TAG }}