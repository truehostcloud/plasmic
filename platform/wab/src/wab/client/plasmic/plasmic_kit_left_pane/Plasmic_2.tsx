// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: aukbrhkegRkQ6KizvhdUPT
// Component: cJ8w1eDWyZ

import * as React from "react";

import {
  Flex as Flex__,
  PlasmicImg as PlasmicImg__,
  StrictProps,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";

import ListSectionHeader from "../../components/ListSectionHeader"; // plasmic-import: wNvxk7eOak/component
import ListSectionSeparator from "../../components/ListSectionSeparator"; // plasmic-import: uG5_fPM0sK/component
import AddDrawerItem from "../../components/studio/add-drawer/AddDrawerItem"; // plasmic-import: isQPD0RPCw/component
import LeftSearchPanel from "../../components/studio/LeftSearchPanel"; // plasmic-import: TqAPn0srTq/component
import IconButton from "../../components/widgets/IconButton"; // plasmic-import: LPry-TF4j22a/component

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_plasmic_kit_color_tokens_css from "../plasmic_kit_q_4_color_tokens/plasmic_plasmic_kit_q_4_color_tokens.module.css"; // plasmic-import: 95xp9cYcv7HrNWpFWWhbcv/projectcss
import plasmic_plasmic_kit_new_design_system_former_style_controls_css from "../plasmic_kit_style_controls/plasmic_plasmic_kit_styles_pane.module.css"; // plasmic-import: gYEVvAzCcLMHDVPvuYxkFh/projectcss
import plasmic_plasmic_kit_design_system_deprecated_css from "../PP__plasmickit_design_system.module.css"; // plasmic-import: tXkSR39sgCDWSitZxC5xFV/projectcss
import projectcss from "../PP__plasmickit_left_pane.module.css"; // plasmic-import: aukbrhkegRkQ6KizvhdUPT/projectcss
import sty from "./Plasmic_2.module.css"; // plasmic-import: cJ8w1eDWyZ/css

import AfterIcon from "../plasmic_kit/PlasmicIcon__After"; // plasmic-import: yzAFS1IyVvChx/icon
import AreaInputIcon from "../plasmic_kit/PlasmicIcon__AreaInput"; // plasmic-import: BGTwDE0-XM3EQ/icon
import BeforeIcon from "../plasmic_kit/PlasmicIcon__Before"; // plasmic-import: VU26fT14NQttw/icon
import ButtonInputIcon from "../plasmic_kit/PlasmicIcon__ButtonInput"; // plasmic-import: _bmaLjOFc6A0c/icon
import ComponentIcon from "../plasmic_kit/PlasmicIcon__Component"; // plasmic-import: nNWEF4jI3s5DI/icon
import FrameIcon from "../plasmic_kit/PlasmicIcon__Frame"; // plasmic-import: nMkHNFwp_HRuJ/icon
import HeadingIcon from "../plasmic_kit/PlasmicIcon__Heading"; // plasmic-import: 52oeoNiO91g3E/icon
import HStackBlockIcon from "../plasmic_kit/PlasmicIcon__HStackBlock"; // plasmic-import: vrE0GHgUiSGkm/icon
import ImageBlockIcon from "../plasmic_kit/PlasmicIcon__ImageBlock"; // plasmic-import: Sta1tgTjp-AlG/icon
import LinkIcon from "../plasmic_kit/PlasmicIcon__Link"; // plasmic-import: BQBWbw0fg66Lw/icon
import PassInputIcon from "../plasmic_kit/PlasmicIcon__PassInput"; // plasmic-import: X561BmD81oKJV/icon
import TextBlockIcon from "../plasmic_kit/PlasmicIcon__TextBlock"; // plasmic-import: nzc8B7oWFfsYG/icon
import VStackBlockIcon from "../plasmic_kit/PlasmicIcon__VStackBlock"; // plasmic-import: DTUk351ydDQGv/icon
import image49X6ZsC5Ww5 from "../plasmic_kit_design_system/images/image4.svg"; // plasmic-import: 9X6ZsC5ww5/picture
import ChevronDownSvgIcon from "../plasmic_kit_icons/icons/PlasmicIcon__ChevronDownSvg"; // plasmic-import: xZrB9_0ir/icon
import PlusCircleSvgIcon from "../plasmic_kit_icons/icons/PlasmicIcon__PlusCircleSvg"; // plasmic-import: tPPI666-2/icon

createPlasmicElementProxy;

export type Plasmic_2__VariantMembers = {};
export type Plasmic_2__VariantsArgs = {};
type VariantPropType = keyof Plasmic_2__VariantsArgs;
export const Plasmic_2__VariantProps = new Array<VariantPropType>();

export type Plasmic_2__ArgsType = {};
type ArgPropType = keyof Plasmic_2__ArgsType;
export const Plasmic_2__ArgProps = new Array<ArgPropType>();

export type Plasmic_2__OverridesType = {
  root?: Flex__<"div">;
  leftSearchPanel?: Flex__<typeof LeftSearchPanel>;
  content?: Flex__<"div">;
  prependButton?: Flex__<typeof IconButton>;
  appendButton?: Flex__<typeof IconButton>;
  prependButton232222222222322?: Flex__<typeof IconButton>;
  appendButton232222222222322?: Flex__<typeof IconButton>;
  prependButton2322222222223222?: Flex__<typeof IconButton>;
  appendButton2322222222223222?: Flex__<typeof IconButton>;
  prependButton23222222222232222?: Flex__<typeof IconButton>;
  appendButton23222222222232222?: Flex__<typeof IconButton>;
  prependButton232222222222322222?: Flex__<typeof IconButton>;
  appendButton232222222222322222?: Flex__<typeof IconButton>;
  prependButton23222222222232?: Flex__<typeof IconButton>;
  appendButton23222222222232?: Flex__<typeof IconButton>;
  prependButton232222222222?: Flex__<typeof IconButton>;
  appendButton232222222222?: Flex__<typeof IconButton>;
  prependButton22?: Flex__<typeof IconButton>;
  appendButton22?: Flex__<typeof IconButton>;
};

export interface Default_2Props {
  className?: string;
}

const $$ = {};

function Plasmic_2__RenderFunc(props: {
  variants: Plasmic_2__VariantsArgs;
  args: Plasmic_2__ArgsType;
  overrides: Plasmic_2__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants,
  };

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_plasmic_kit_design_system_deprecated_css.plasmic_tokens,
        plasmic_plasmic_kit_color_tokens_css.plasmic_tokens,
        plasmic_plasmic_kit_new_design_system_former_style_controls_css.plasmic_tokens,
        sty.root
      )}
    >
      <LeftSearchPanel
        data-plasmic-name={"leftSearchPanel"}
        data-plasmic-override={overrides.leftSearchPanel}
        className={classNames("__wab_instance", sty.leftSearchPanel)}
      />

      <div
        data-plasmic-name={"content"}
        data-plasmic-override={overrides.content}
        className={classNames(projectcss.all, sty.content)}
      >
        <ListSectionHeader
          actions={
            <IconButton
              children2={
                <ChevronDownSvgIcon
                  className={classNames(projectcss.all, sty.svg__zvlc0)}
                  role={"img"}
                />
              }
              className={classNames("__wab_instance", sty.iconButton__edwE)}
            >
              <PlusCircleSvgIcon
                className={classNames(projectcss.all, sty.svg__cv6Ny)}
                role={"img"}
              />
            </IconButton>
          }
          className={classNames("__wab_instance", sty.listSectionHeader__jL8)}
        >
          {"Recently used\u2026"}
        </ListSectionHeader>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                data-plasmic-name={"prependButton"}
                data-plasmic-override={overrides.prependButton}
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__lb4QJ)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__ufmd0)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                data-plasmic-name={"appendButton"}
                data-plasmic-override={overrides.appendButton}
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__pQdzg)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.appendButton)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__hFvRt)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__gOkt)}
          icon={
            <ComponentIcon
              className={classNames(projectcss.all, sty.svg__dVxk9)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__xTec)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Component 1"}
        </AddDrawerItem>
        <ListSectionSeparator
          className={classNames(
            "__wab_instance",
            sty.listSectionSeparator__shd2
          )}
        />

        <ListSectionHeader
          actions={
            <IconButton
              children2={
                <ChevronDownSvgIcon
                  className={classNames(projectcss.all, sty.svg__urvCn)}
                  role={"img"}
                />
              }
              className={classNames("__wab_instance", sty.iconButton__gwGt)}
            >
              <PlusCircleSvgIcon
                className={classNames(projectcss.all, sty.svg__cpQ3K)}
                role={"img"}
              />
            </IconButton>
          }
          className={classNames("__wab_instance", sty.listSectionHeader__tPcP)}
        >
          {"Artboards"}
        </ListSectionHeader>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__crt9J)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__qmCOn)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__tx92)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__xIblo)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__nBiS7)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem___7GMI)}
          icon={
            <FrameIcon
              className={classNames(projectcss.all, sty.svg__lHrDq)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__hWsla)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"New artboard"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__uRXZ)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__rAa1T)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__hIbDh)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__wvc16)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__hFxp)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__jtA5P)}
          icon={
            <FrameIcon
              className={classNames(projectcss.all, sty.svg__wc5Vo)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__khVaZ)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"New component"}
        </AddDrawerItem>
        <ListSectionSeparator
          className={classNames(
            "__wab_instance",
            sty.listSectionSeparator__tnazP
          )}
        />

        <ListSectionHeader
          actions={
            <IconButton
              children2={
                <ChevronDownSvgIcon
                  className={classNames(projectcss.all, sty.svg__uR1A2)}
                  role={"img"}
                />
              }
              className={classNames("__wab_instance", sty.iconButton__dj1U2)}
            >
              <PlusCircleSvgIcon
                className={classNames(projectcss.all, sty.svg___6TpUg)}
                role={"img"}
              />
            </IconButton>
          }
          className={classNames("__wab_instance", sty.listSectionHeader__fjgsH)}
        >
          {"Basics"}
        </ListSectionHeader>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__z6Qfq)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__hljV)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__kBrEu)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__biqL)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__mr3Tg)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem___3UHn)}
          icon={
            <ComponentIcon
              className={classNames(projectcss.all, sty.svg__h3Co5)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___2EpwU)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Free box"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__c8ChG)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__mvhEt)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__pv2MM)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__fSn7A)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__lsUuS)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__g1BHu)}
          icon={
            <HStackBlockIcon
              className={classNames(projectcss.all, sty.svg___44ED3)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__yv4GX)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Horizontal stack"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__iaL5D)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg___7FEuJ)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__aDgol)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__nCSai)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__cZdP9)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__ebXz)}
          icon={
            <VStackBlockIcon
              className={classNames(projectcss.all, sty.svg___9Yq8A)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__cpYaG)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Vertical stack"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__h2Q1E)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__jOfi8)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__vfZnL)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__auUnh)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__ry53C)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__bciD9)}
          icon={
            <TextBlockIcon
              className={classNames(projectcss.all, sty.svg__mJisj)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__sU7Hz)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Text"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__yda1R)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__oR8N)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__sAqmK)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__pC6Uv)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__yXdU8)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__mpPMh)}
          icon={
            <ImageBlockIcon
              className={classNames(projectcss.all, sty.svg__uhDox)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__qyrgv)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Image"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__pgFAf)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__jYj9D)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__tSZga)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__cnN2)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg___4NQy)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__ybvgR)}
          icon={
            <ImageBlockIcon
              className={classNames(projectcss.all, sty.svg___9RvcA)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__rFqTa)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Icon"}
        </AddDrawerItem>
        <ListSectionSeparator
          className={classNames(
            "__wab_instance",
            sty.listSectionSeparator__axDp
          )}
        />

        <ListSectionHeader
          actions={
            <IconButton
              children2={
                <ChevronDownSvgIcon
                  className={classNames(projectcss.all, sty.svg__eQ0Yz)}
                  role={"img"}
                />
              }
              className={classNames("__wab_instance", sty.iconButton___8P9Bz)}
            >
              <PlusCircleSvgIcon
                className={classNames(projectcss.all, sty.svg__wD0Jw)}
                role={"img"}
              />
            </IconButton>
          }
          className={classNames("__wab_instance", sty.listSectionHeader__dntNb)}
        >
          {"Project Components"}
        </ListSectionHeader>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__gzV2W)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg___6MsiS)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__zsnM)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__aZjZc)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__fwOgv)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem___03X7)}
          icon={
            <ComponentIcon
              className={classNames(projectcss.all, sty.svg__mlEo5)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___2Kt2R)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Component 1"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__cxcFc)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__tpMtp)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__msFJc)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__evXdY)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg___7YOdY)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__e8NG)}
          icon={
            <ComponentIcon
              className={classNames(projectcss.all, sty.svg__zwEw)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__nqom6)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Component 2"}
        </AddDrawerItem>
        <ListSectionSeparator
          className={classNames(
            "__wab_instance",
            sty.listSectionSeparator___6Uip
          )}
        />

        <ListSectionHeader
          actions={
            <IconButton
              children2={
                <ChevronDownSvgIcon
                  className={classNames(projectcss.all, sty.svg__qmFFn)}
                  role={"img"}
                />
              }
              className={classNames("__wab_instance", sty.iconButton__aZWf)}
            >
              <PlusCircleSvgIcon
                className={classNames(projectcss.all, sty.svg__fq6YP)}
                role={"img"}
              />
            </IconButton>
          }
          className={classNames("__wab_instance", sty.listSectionHeader__mBXq2)}
        >
          {"Unstyled Elements"}
        </ListSectionHeader>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__njmc2)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__by05T)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__d4MIh)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__b4TF)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__yt6S)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__d08Mt)}
          icon={
            <ButtonInputIcon
              className={classNames(projectcss.all, sty.svg__n2MbN)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__jf5Tn)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Button"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__lkvzc)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__m3Em1)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg___6DNv)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__rimuA)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__ukjw)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem___9DKx)}
          icon={
            <LinkIcon
              className={classNames(projectcss.all, sty.svg__khew5)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__sI4)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Text input"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__e96Id)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__diYeR)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__dFsHk)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__moS4)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__iCrMg)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem___2PtF9)}
          icon={
            <PassInputIcon
              className={classNames(projectcss.all, sty.svg__uV9ZL)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___0A4Xc)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Password input"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__maA3B)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__as3Uc)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg___7JdvS)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__qJupl)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg___9PSfz)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__pQm3H)}
          icon={
            <AreaInputIcon
              className={classNames(projectcss.all, sty.svg__h1UgB)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___5ABvB)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Multiline text input"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__bnaO)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__jMu0)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg___4PVga)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__xnoVz)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__aJ1E6)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__mzba)}
          icon={
            <LinkIcon
              className={classNames(projectcss.all, sty.svg__lczw)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__rUtn5)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Link"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__hP9O5)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__vlnmz)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__zNYlQ)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__l4VQp)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg___1Zowh)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__reimP)}
          icon={
            <HeadingIcon
              className={classNames(projectcss.all, sty.svg__obwhX)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__v9RgC)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Heading"}
        </AddDrawerItem>
        <ListSectionSeparator
          className={classNames(
            "__wab_instance",
            sty.listSectionSeparator___5TREf
          )}
        />

        <ListSectionHeader
          actions={
            <IconButton
              children2={
                <ChevronDownSvgIcon
                  className={classNames(projectcss.all, sty.svg__zATpN)}
                  role={"img"}
                />
              }
              className={classNames("__wab_instance", sty.iconButton__pukfy)}
            >
              <PlusCircleSvgIcon
                className={classNames(projectcss.all, sty.svg__i66Xp)}
                role={"img"}
              />
            </IconButton>
          }
          className={classNames("__wab_instance", sty.listSectionHeader__lFm1N)}
        >
          {"Icons"}
        </ListSectionHeader>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__w9HRn)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__kOet6)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__nSwpr)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.iconButton__zw5Ex)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__tvOlh)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem___3FB9B)}
          icon={
            <LinkIcon
              className={classNames(projectcss.all, sty.svg__gsMUc)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___3B4ZT)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Link"}
        </AddDrawerItem>
        <ListSectionSeparator
          className={classNames(
            "__wab_instance",
            sty.listSectionSeparator__pHgDl
          )}
        />

        <ListSectionHeader
          actions={
            <IconButton
              children2={
                <ChevronDownSvgIcon
                  className={classNames(projectcss.all, sty.svg___69SD)}
                  role={"img"}
                />
              }
              className={classNames("__wab_instance", sty.iconButton__odSi4)}
            >
              <PlusCircleSvgIcon
                className={classNames(projectcss.all, sty.svg__lnIbj)}
                role={"img"}
              />
            </IconButton>
          }
          className={classNames("__wab_instance", sty.listSectionHeader__xEmQc)}
        >
          {"Images"}
        </ListSectionHeader>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                data-plasmic-name={"prependButton232222222222322"}
                data-plasmic-override={overrides.prependButton232222222222322}
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__dHxuC)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__kkZrF)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                data-plasmic-name={"appendButton232222222222322"}
                data-plasmic-override={overrides.appendButton232222222222322}
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg___2Veyk)}
                    role={"img"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.appendButton232222222222322
                )}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__tfSww)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__aItZi)}
          icon={
            <LinkIcon
              className={classNames(projectcss.all, sty.svg___3GI21)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__gKhIs)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Link"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                data-plasmic-name={"prependButton2322222222223222"}
                data-plasmic-override={overrides.prependButton2322222222223222}
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__ilYpE)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__icLPl)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                data-plasmic-name={"appendButton2322222222223222"}
                data-plasmic-override={overrides.appendButton2322222222223222}
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg___3AaJa)}
                    role={"img"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.appendButton2322222222223222
                )}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__oCx)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem___9WRqQ)}
          icon={
            <LinkIcon
              className={classNames(projectcss.all, sty.svg___1ClMz)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__mJt6E)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Link"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                data-plasmic-name={"prependButton23222222222232222"}
                data-plasmic-override={overrides.prependButton23222222222232222}
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__hEGqn)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__eJtMs)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                data-plasmic-name={"appendButton23222222222232222"}
                data-plasmic-override={overrides.appendButton23222222222232222}
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__oygbS)}
                    role={"img"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.appendButton23222222222232222
                )}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__ey6L0)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__gu03X)}
          icon={
            <LinkIcon
              className={classNames(projectcss.all, sty.svg__xQTs)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__gxhnB)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Link"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                data-plasmic-name={"prependButton232222222222322222"}
                data-plasmic-override={
                  overrides.prependButton232222222222322222
                }
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg___6PnGf)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__wQjvn)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                data-plasmic-name={"appendButton232222222222322222"}
                data-plasmic-override={overrides.appendButton232222222222322222}
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__q4OAk)}
                    role={"img"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.appendButton232222222222322222
                )}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__sUnZ)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__wMAol)}
          icon={
            <LinkIcon
              className={classNames(projectcss.all, sty.svg___2AppX)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__bmZrC)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Link"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                data-plasmic-name={"prependButton23222222222232"}
                data-plasmic-override={overrides.prependButton23222222222232}
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__kTv2D)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__z48Ym)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                data-plasmic-name={"appendButton23222222222232"}
                data-plasmic-override={overrides.appendButton23222222222232}
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__wQpQr)}
                    role={"img"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.appendButton23222222222232
                )}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__l8Ht9)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__zeOZs)}
          icon={
            <LinkIcon
              className={classNames(projectcss.all, sty.svg__bb0Oo)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__aGtDa)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Whatevs"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                data-plasmic-name={"prependButton232222222222"}
                data-plasmic-override={overrides.prependButton232222222222}
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__pqWo)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__p5CWf)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                data-plasmic-name={"appendButton232222222222"}
                data-plasmic-override={overrides.appendButton232222222222}
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__bYu3)}
                    role={"img"}
                  />
                }
                className={classNames(
                  "__wab_instance",
                  sty.appendButton232222222222
                )}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__dghs7)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__aw21I)}
          icon={
            <LinkIcon
              className={classNames(projectcss.all, sty.svg___5BeZm)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__oUhu)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Link"}
        </AddDrawerItem>
        <AddDrawerItem
          actions={
            <React.Fragment>
              <IconButton
                data-plasmic-name={"prependButton22"}
                data-plasmic-override={overrides.prependButton22}
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__bKMkJ)}
                    role={"img"}
                  />
                }
              >
                <BeforeIcon
                  className={classNames(projectcss.all, sty.svg__mHwI6)}
                  role={"img"}
                />
              </IconButton>
              <IconButton
                data-plasmic-name={"appendButton22"}
                data-plasmic-override={overrides.appendButton22}
                children2={
                  <ChevronDownSvgIcon
                    className={classNames(projectcss.all, sty.svg__e58X1)}
                    role={"img"}
                  />
                }
                className={classNames("__wab_instance", sty.appendButton22)}
              >
                <AfterIcon
                  className={classNames(projectcss.all, sty.svg__jTFvr)}
                  role={"img"}
                />
              </IconButton>
            </React.Fragment>
          }
          className={classNames("__wab_instance", sty.addDrawerItem__gx59S)}
          icon={
            <LinkIcon
              className={classNames(projectcss.all, sty.svg__c1VUw)}
              role={"img"}
            />
          }
          previewImage={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__bdrO6)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              src={{
                src: image49X6ZsC5Ww5,
                fullWidth: 150,
                fullHeight: 150,
                aspectRatio: 1,
              }}
            />
          }
        >
          {"Link"}
        </AddDrawerItem>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "leftSearchPanel",
    "content",
    "prependButton",
    "appendButton",
    "prependButton232222222222322",
    "appendButton232222222222322",
    "prependButton2322222222223222",
    "appendButton2322222222223222",
    "prependButton23222222222232222",
    "appendButton23222222222232222",
    "prependButton232222222222322222",
    "appendButton232222222222322222",
    "prependButton23222222222232",
    "appendButton23222222222232",
    "prependButton232222222222",
    "appendButton232222222222",
    "prependButton22",
    "appendButton22",
  ],
  leftSearchPanel: ["leftSearchPanel"],
  content: [
    "content",
    "prependButton",
    "appendButton",
    "prependButton232222222222322",
    "appendButton232222222222322",
    "prependButton2322222222223222",
    "appendButton2322222222223222",
    "prependButton23222222222232222",
    "appendButton23222222222232222",
    "prependButton232222222222322222",
    "appendButton232222222222322222",
    "prependButton23222222222232",
    "appendButton23222222222232",
    "prependButton232222222222",
    "appendButton232222222222",
    "prependButton22",
    "appendButton22",
  ],
  prependButton: ["prependButton"],
  appendButton: ["appendButton"],
  prependButton232222222222322: ["prependButton232222222222322"],
  appendButton232222222222322: ["appendButton232222222222322"],
  prependButton2322222222223222: ["prependButton2322222222223222"],
  appendButton2322222222223222: ["appendButton2322222222223222"],
  prependButton23222222222232222: ["prependButton23222222222232222"],
  appendButton23222222222232222: ["appendButton23222222222232222"],
  prependButton232222222222322222: ["prependButton232222222222322222"],
  appendButton232222222222322222: ["appendButton232222222222322222"],
  prependButton23222222222232: ["prependButton23222222222232"],
  appendButton23222222222232: ["appendButton23222222222232"],
  prependButton232222222222: ["prependButton232222222222"],
  appendButton232222222222: ["appendButton232222222222"],
  prependButton22: ["prependButton22"],
  appendButton22: ["appendButton22"],
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  leftSearchPanel: typeof LeftSearchPanel;
  content: "div";
  prependButton: typeof IconButton;
  appendButton: typeof IconButton;
  prependButton232222222222322: typeof IconButton;
  appendButton232222222222322: typeof IconButton;
  prependButton2322222222223222: typeof IconButton;
  appendButton2322222222223222: typeof IconButton;
  prependButton23222222222232222: typeof IconButton;
  appendButton23222222222232222: typeof IconButton;
  prependButton232222222222322222: typeof IconButton;
  appendButton232222222222322222: typeof IconButton;
  prependButton23222222222232: typeof IconButton;
  appendButton23222222222232: typeof IconButton;
  prependButton232222222222: typeof IconButton;
  appendButton232222222222: typeof IconButton;
  prependButton22: typeof IconButton;
  appendButton22: typeof IconButton;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmic_2__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmic_2__VariantsArgs;
    args?: Plasmic_2__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmic_2__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      Plasmic_2__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: Plasmic_2__ArgProps,
          internalVariantPropNames: Plasmic_2__VariantProps,
        }),
      [props, nodeName]
    );
    return Plasmic_2__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName,
    });
  };
  if (nodeName === "root") {
    func.displayName = "Plasmic_2";
  } else {
    func.displayName = `Plasmic_2.${nodeName}`;
  }
  return func;
}

export const Plasmic_2 = Object.assign(
  // Top-level Plasmic_2 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    leftSearchPanel: makeNodeComponent("leftSearchPanel"),
    content: makeNodeComponent("content"),
    prependButton: makeNodeComponent("prependButton"),
    appendButton: makeNodeComponent("appendButton"),
    prependButton232222222222322: makeNodeComponent(
      "prependButton232222222222322"
    ),
    appendButton232222222222322: makeNodeComponent(
      "appendButton232222222222322"
    ),
    prependButton2322222222223222: makeNodeComponent(
      "prependButton2322222222223222"
    ),
    appendButton2322222222223222: makeNodeComponent(
      "appendButton2322222222223222"
    ),
    prependButton23222222222232222: makeNodeComponent(
      "prependButton23222222222232222"
    ),
    appendButton23222222222232222: makeNodeComponent(
      "appendButton23222222222232222"
    ),
    prependButton232222222222322222: makeNodeComponent(
      "prependButton232222222222322222"
    ),
    appendButton232222222222322222: makeNodeComponent(
      "appendButton232222222222322222"
    ),
    prependButton23222222222232: makeNodeComponent(
      "prependButton23222222222232"
    ),
    appendButton23222222222232: makeNodeComponent("appendButton23222222222232"),
    prependButton232222222222: makeNodeComponent("prependButton232222222222"),
    appendButton232222222222: makeNodeComponent("appendButton232222222222"),
    prependButton22: makeNodeComponent("prependButton22"),
    appendButton22: makeNodeComponent("appendButton22"),

    // Metadata about props expected for Plasmic_2
    internalVariantProps: Plasmic_2__VariantProps,
    internalArgProps: Plasmic_2__ArgProps,
  }
);

export default Plasmic_2;
/* prettier-ignore-end */
